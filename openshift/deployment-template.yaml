apiVersion: v1
kind: Template
metadata:
  name: management-api-deployment
  annotations:
    description: "This is Thoth - Management API"
    openshift.io/display-name: "Thoth Core: Management API"
    version: 0.9.1
    tags: thoth,management-api,ai-stacks,aistacks
    template.openshift.io/documentation-url: https://github.com/Thoth-Station/
    template.openshift.io/long-description: >
      This template defines resources needed to deploy Thoth Management API on OpenShift.
    template.openshift.io/provider-display-name: "Red Hat, Inc."
    thoth-station.ninja/template-version: 0.9.0
  labels:
    template: management-api-deployment
    app: thoth
    component: management-api

parameters:
  - description: Project the ImageStream to be use lives in
    displayName: ImageStream Project
    required: true
    name: IMAGE_STREAM_PROJECT_NAME

  - description: Tag of the ImageStream to be use
    displayName: ImageStream Tag
    required: true
    name: IMAGE_STREAM_TAG
    value: "latest"

  - description: Service account to be used.
    displayName: Service account name.
    required: true
    name: SERVICE_ACCOUNT_NAME
    value: "management-api"

objects:
  - kind: Route
    apiVersion: v1
    metadata:
      name: management-api
      annotations:
        thoth-station.ninja/template-version: 0.9.0
      labels:
        app: thoth
        component: management-api
        service: management-api
    spec:
      to:
        kind: Service
        name: management-api

  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: thoth
        component: management-api
        service: management-api
      annotations:
        thoth-station.ninja/template-version: 0.9.0
      name: management-api
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        service: management-api

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      labels:
        app: thoth
        component: management-api
        service: management-api
      annotations:
        thoth-station.ninja/template-version: 0.9.0
      name: management-api
    spec:
      replicas: 1
      selector:
        service: management-api
      template:
        metadata:
          labels:
            service: management-api
        spec:
          serviceAccountName: "${SERVICE_ACCOUNT_NAME}"
          containers:
            - name: management-api-openapi
              env:
                - name: APP_MODULE
                  value: "thoth.management_api.openapi_server:app"
                - name: APP_CONFIG
                  value: "gunicorn.conf.py"
                - name: KUBERNETES_API_URL
                  value: "https://kubernetes.default.svc.cluster.local"
                - name: KUBERNETES_VERIFY_TLS
                  value: "0"
                - name: THOTH_MANAGEMENT_API_RUN_MIGRATIONS
                  value: "0"
                - name: AMUN_API_URL
                  valueFrom:
                    configMapKeyRef:
                      key: amun-api-url
                      name: thoth
                - name: THOTH_RESULT_API_URL
                  value: http://result-api
                - name: THOTH_MIDDLETIER_POD_CPU_LIMIT
                  valueFrom:
                    configMapKeyRef:
                      key: middletier-pod-cpu-limit
                      name: thoth
                - name: THOTH_MIDDLETIER_POD_MEMORY_LIMIT
                  valueFrom:
                    configMapKeyRef:
                      key: middletier-pod-memory-limit
                      name: thoth
                - name: THOTH_FRONTEND_NAMESPACE
                  valueFrom:
                    configMapKeyRef:
                      key: frontend-namespace
                      name: thoth
                - name: THOTH_MIDDLETIER_NAMESPACE
                  valueFrom:
                    configMapKeyRef:
                      key: middletier-namespace
                      name: thoth
                - name: THOTH_INFRA_NAMESPACE
                  valueFrom:
                    configMapKeyRef:
                      key: infra-namespace
                      name: thoth
                - name: THOTH_BACKEND_NAMESPACE
                  valueFrom:
                    configMapKeyRef:
                      key: backend-namespace
                      name: thoth
                - name: THOTH_DEPLOYMENT_NAME
                  valueFrom:
                    configMapKeyRef:
                      key: storage-bucket-name
                      name: thoth
                - name: THOTH_S3_ENDPOINT_URL
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-host
                      name: thoth
                - name: THOTH_CEPH_BUCKET
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-bucket-name
                      name: thoth
                - name: THOTH_CEPH_BUCKET_PREFIX
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-bucket-prefix
                      name: thoth
                - name: THOTH_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: thoth-secret
                - name: THOTH_MANAGEMENT_API_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: management-api-token
                - name: THOTH_APP_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: app-secret-key
                - name: THOTH_CEPH_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: ceph-key-id
                - name: THOTH_CEPH_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: ceph-secret-key
                - name: RSYSLOG_HOST
                  valueFrom:
                    configMapKeyRef:
                      key: rsyslog-host
                      name: thoth
                - name: RSYSLOG_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: rsyslog-port
                      name: thoth
                - name: PROMETHEUS_PUSHGATEWAY_HOST
                  valueFrom:
                    configMapKeyRef:
                      key: prometheus-pushgateway-host
                      name: thoth
                - name: PROMETHEUS_PUSHGATEWAY_PORT
                  valueFrom:
                    configMapKeyRef:
                      name: thoth
                      key: prometheus-pushgateway-port
                - name: SENTRY_DSN
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: sentry-dsn
                - name: KNOWLEDGE_GRAPH_HOST
                  valueFrom:
                    configMapKeyRef:
                      key: postgresql-host
                      name: thoth
                - name: KNOWLEDGE_GRAPH_PORT
                  value: "5432"
                - name: KNOWLEDGE_GRAPH_SSL_DISABLED
                  value: "1"
                - name: KNOWLEDGE_GRAPH_USER
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: database-user
                - name: KNOWLEDGE_GRAPH_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: database-password
                - name: KNOWLEDGE_GRAPH_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: database-name
                - name: THOTH_API_HTTPS
                  value: "1"
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                requests:
                  memory: "768Mi"
                  cpu: "1"
                limits:
                  memory: "1Gi"
                  cpu: "1.5"
              readinessProbe:
                httpGet:
                  path: "/readiness"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 10
                timeoutSeconds: 10
              livenessProbe:
                httpGet:
                  path: "/liveness"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 60
                timeoutSeconds: 10
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - management-api-openapi
            from:
              kind: ImageStreamTag
              namespace: "${IMAGE_STREAM_PROJECT_NAME}"
              name: "management-api:${IMAGE_STREAM_TAG}"
